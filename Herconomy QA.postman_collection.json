{
	"info": {
		"_postman_id": "c642dbd6-866d-41f9-aa8b-06639506ee58",
		"name": "Herconomy QA",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25328432",
		"_collection_link": "https://herconomyteam.postman.co/workspace/Herconomy~df59dec4-42d3-4168-8b01-8d2a3225eee0/collection/25328432-c642dbd6-866d-41f9-aa8b-06639506ee58?action=share&source=collection_link&creator=25328432"
	},
	"item": [
		{
			"name": "Bills Copy",
			"item": [
				{
					"name": "Auth",
					"item": [
						{
							"name": "User Login - successful",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Set signin token value\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.environment.set(\"bearer_token\", jsonData.token);    ",
											"}); ",
											"",
											"var resp = pm.response.json();",
											"pm.environment.set(\"JWT_TOKEN\", resp.token)",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Token details are returned\", function () {",
											"    pm.expect(resp.token).is.not.null",
											"    pm.expect(resp.user.id).is.not.null",
											"    pm.expect(resp.user.username).is.not.null",
											"    pm.expect(resp.user_tag).is.not.null",
											"    pm.expect(resp.phone_number).is.not.null    ",
											"}); "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{JWT_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"sultan@assurdly.com\",\n    \"password\": \"Test419$\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/rest-auth/login/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rest-auth",
										"login",
										""
									]
								},
								"description": "### User Login Endpoint\n\nLogin endpoint using user email and password set during sign up."
							},
							"response": []
						}
					]
				},
				{
					"name": "Airtime",
					"item": [
						{
							"name": "Airtime Purchase -(Empty Phone)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var resp = JSON.parse(responseBody);\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Empty phone error message returned\", function () {\r",
											"   pm.expect(resp.message.phone[0]).to.eql(\"Inputed phone cannot be empty\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{bearer_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"amount\": \"200\",\r\n    \"service\": \"9Mobile\",\r\n    \"category\": \"Airtime\",\r\n    \"phone\": \"\",\r\n    \"password\": \"Test419$\"\r\n}\r\n\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/billspay/airtime/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billspay",
										"airtime",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Airtime Purchase -(Empty Amount)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var resp = JSON.parse(responseBody);\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Empty amount error message returned\", function () {\r",
											"   pm.expect(resp.message.amount[0]).to.eql(\"Inputed amount cannot be empty\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{bearer_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"amount\": \"\",\r\n    \"service\": \"9Mobile\",\r\n    \"category\": \"Airtime\",\r\n    \"phone\": \"08173106732\",\r\n    \"password\": \"Test419$\"\r\n}\r\n\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/billspay/airtime/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billspay",
										"airtime",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Airtime Purchase -(Empty Service)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var resp = JSON.parse(responseBody);\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Empty service error message returned\", function () {\r",
											"   pm.expect(resp.message.service[0]).to.eql(\"Inputed service cannot be empty\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{bearer_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"amount\": \"200\",\r\n    \"service\": \"\",\r\n    \"category\": \"Airtime\",\r\n    \"phone\": \"08173106732\",\r\n    \"password\": \"Test419$\"\r\n}\r\n\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/billspay/airtime/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billspay",
										"airtime",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Airtime Purchase -(Empty Category)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var resp = JSON.parse(responseBody);\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Empty category error message returned\", function () {\r",
											"   pm.expect(resp.message.category[0]).to.eql(\"Inputed category cannot be empty\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{bearer_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"amount\": \"200\",\r\n    \"service\": \"9Mobile\",\r\n    \"category\": \"\",\r\n    \"phone\": \"08173106732\",\r\n    \"password\": \"Test419$\"\r\n}\r\n\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/billspay/airtime/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billspay",
										"airtime",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Airtime Purchase -(Low Balance)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var resp = JSON.parse(responseBody);\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Low balance error message returned\", function () {\r",
											"   pm.expect(resp.message.message).to.eql(\"Low Balance\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{bearer_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"amount\": \"100\",\r\n    \"service\": \"9Mobile\",\r\n    \"category\": \"Airtime\",\r\n    \"phone\": \"08173106732\",\r\n    \"password\": \"Test419$\"\r\n}\r\n\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/billspay/airtime/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billspay",
										"airtime",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Airtime Purchase -(9 Mobile Sucessful)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var resp = JSON.parse(responseBody);\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Success message is returned\", function () {\r",
											"   pm.expect(resp.response_message).to.eql(\"Successful\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{bearer_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"amount\": \"100\",\r\n    \"service\": \"9Mobile\",\r\n    \"category\": \"Airtime\",\r\n    \"phone\": \"08173106732\",\r\n    \"password\": \"Test419$\"\r\n}\r\n\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/billspay/airtime/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billspay",
										"airtime",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Airtime Purchase -(MTN Sucessful)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var resp = JSON.parse(responseBody);\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Success message is returned\", function () {\r",
											"   pm.expect(resp.response_message).to.eql(\"Successful\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{bearer_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"amount\": \"100\",\r\n    \"service\": \"Mtn\",\r\n    \"category\": \"Airtime\",\r\n    \"phone\": \"09030863921\",\r\n    \"password\": \"Test419$\"\r\n}\r\n\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/billspay/airtime/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billspay",
										"airtime",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Airtime Purchase -(Airtel Sucessful)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var resp = JSON.parse(responseBody);\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Success message is returned\", function () {\r",
											"   pm.expect(resp.response_message).to.eql(\"Successful\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{bearer_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"amount\": \"100\",\r\n    \"service\": \"Airtel\",\r\n    \"category\": \"Airtime\",\r\n    \"phone\": \"07088577290\",\r\n    \"password\": \"Test419$\"\r\n}\r\n\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/billspay/airtime/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billspay",
										"airtime",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Airtime Purchase -(Globacom Sucessful)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var resp = JSON.parse(responseBody);\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Success message is returned\", function () {\r",
											"   pm.expect(resp.response_message).to.eql(\"Successful\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{bearer_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"amount\": \"100\",\r\n    \"service\": \"Globacom\",\r\n    \"category\": \"Airtime\",\r\n    \"phone\": \"08054726044\",\r\n    \"password\": \"Test419$\"\r\n}\r\n\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/billspay/airtime/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billspay",
										"airtime",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Data",
					"item": [
						{
							"name": "Product Id(MTN)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\" Product_Id_value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.collectionVariables.set(\"mtn_id\", jsonData.packages[2].id);    \r",
											"}); \r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"OK\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{bearer_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/billspay/data/?category=Data&service=Mtn",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billspay",
										"data",
										""
									],
									"query": [
										{
											"key": "category",
											"value": "Data"
										},
										{
											"key": "service",
											"value": "Mtn"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Product Id (Airtel)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\" Product_Id_value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.collectionVariables.set(\"airtel_id\", jsonData.packages[2].id);    \r",
											"}); \r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"OK\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{bearer_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/billspay/data/?category=Data&service=Airtel",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billspay",
										"data",
										""
									],
									"query": [
										{
											"key": "category",
											"value": "Data"
										},
										{
											"key": "service",
											"value": "Airtel"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Product Id (9 Mobile)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\" Product_Id_value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.collectionVariables.set(\"9mobile_id\", jsonData.packages[2].id);    \r",
											"}); \r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"OK\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{bearer_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/billspay/data/?category=Data&service=9Mobile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billspay",
										"data",
										""
									],
									"query": [
										{
											"key": "category",
											"value": "Data"
										},
										{
											"key": "service",
											"value": "9Mobile"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Product Id (Globacom)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\" Product_Id_value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.collectionVariables.set(\"globacom_id\", jsonData.packages[2].id);    \r",
											"}); \r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"OK\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{bearer_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/billspay/data/?category=Data&service=Globacom",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billspay",
										"data",
										""
									],
									"query": [
										{
											"key": "category",
											"value": "Data"
										},
										{
											"key": "service",
											"value": "Globacom"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Data Purchase(Empty product id)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var resp = JSON.parse(responseBody);\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Empty product_id error message returned\", function () {\r",
											"   pm.expect(resp.message.product_id[0]).to.eql(\"Inputed product_id cannot be empty\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{bearer_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"amount\": \"200\",\r\n    \"service\": \"Mtn\",\r\n    \"category\": \"Data\",\r\n    \"phone\": \"08104697679\",\r\n    \"product_id\": \"\",\r\n    \"password\": \"Test419$\"\r\n}\r\n\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/billspay/data/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billspay",
										"data",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Data Purchase(Empty phone)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var resp = JSON.parse(responseBody);\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Empty phone error message returned\", function () {\r",
											"   pm.expect(resp.message.phone[0]).to.eql(\"Inputed phone cannot be empty\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{bearer_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"amount\": \"200\",\r\n    \"service\": \"Mtn\",\r\n    \"category\": \"Data\",\r\n    \"phone\": \"\",\r\n    \"product_id\": \"{{mtn_id}}\",\r\n    \"password\": \"Test419$\"\r\n}\r\n\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/billspay/data/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billspay",
										"data",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Data Purchase(Empty category)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var resp = JSON.parse(responseBody);\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Empty category error message returned\", function () {\r",
											"   pm.expect(resp.message.category[0]).to.eql(\"Inputed category cannot be empty\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{bearer_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"amount\": \"200\",\r\n    \"service\": \"Mtn\",\r\n    \"category\": \"\",\r\n    \"phone\": \"09030863921\",\r\n    \"product_id\": \"{{mtn_id}}\",\r\n    \"password\": \"Test419$\"\r\n}\r\n\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/billspay/data/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billspay",
										"data",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Data Purchase(Empty service)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var resp = JSON.parse(responseBody);\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Empty service error message returned\", function () {\r",
											"   pm.expect(resp.message.service[0]).to.eql(\"Inputed service cannot be empty\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{bearer_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"amount\": \"200\",\r\n    \"service\": \"\",\r\n    \"category\": \"Data\",\r\n    \"phone\": \"09030863921\",\r\n    \"product_id\": \"{{mtn_id}}\",\r\n    \"password\": \"Test419$\"\r\n}\r\n\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/billspay/data/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billspay",
										"data",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Data Purchase(Empty amount)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var resp = JSON.parse(responseBody);\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Empty amount error message returned\", function () {\r",
											"   pm.expect(resp.message.amount[0]).to.eql(\"Inputed amount cannot be empty\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{bearer_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"amount\": \"\",\r\n    \"service\": \"Mtn\",\r\n    \"category\": \"Data\",\r\n    \"phone\": \"09030863921\",\r\n    \"product_id\": \"{{mtn_id}}\",\r\n    \"password\": \"Test419$\"\r\n}\r\n\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/billspay/data/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billspay",
										"data",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Data Purchase(MTN)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var resp = JSON.parse(responseBody);\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Success message is returned\", function () {\r",
											"   pm.expect(resp.response_message).to.eql(\"Successful\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{bearer_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"amount\": \"100\",\r\n    \"service\": \"Mtn\",\r\n    \"category\": \"Data\",\r\n    \"phone\": \"08104697679\",\r\n    \"product_id\": \"{{mtn_id}}\",\r\n    \"password\": \"Test419$\"\r\n}\r\n\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/billspay/data/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billspay",
										"data",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Data Purchase(Airtel)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var resp = JSON.parse(responseBody);\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Success message is returned\", function () {\r",
											"   pm.expect(resp.response_message).to.eql(\"Successful\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{bearer_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"amount\": \"100\",\r\n    \"service\": \"Airtel\",\r\n    \"category\": \"Data\",\r\n    \"phone\": \"08080397493\",\r\n    \"product_id\": \"{{airtel_id}}\",\r\n    \"password\": \"Test419$\"\r\n}\r\n\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/billspay/data/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billspay",
										"data",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Data Purchase(9 Mobile)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var resp = JSON.parse(responseBody);\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Success message is returned\", function () {\r",
											"   pm.expect(resp.response_message).to.eql(\"Successful\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{bearer_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"amount\": \"100\",\r\n    \"service\": \"9Mobile\",\r\n    \"category\": \"Data\",\r\n    \"phone\": \"08173106732\",\r\n    \"product_id\": \"{{9mobile_id}}\",\r\n    \"password\": \"Test419$\"\r\n}\r\n\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/billspay/data/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billspay",
										"data",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Data Purchase(Globacom)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var resp = JSON.parse(responseBody);\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Success message is returned\", function () {\r",
											"   pm.expect(resp.response_message).to.eql(\"Successful\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{bearer_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"amount\": \"100\",\r\n    \"service\": \"Globacom\",\r\n    \"category\": \"Data\",\r\n    \"phone\": \"08054726044\",\r\n    \"product_id\": \"{{globacom_id}}\",\r\n    \"password\": \"Test419$\"\r\n}\r\n\r\n\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/billspay/data/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billspay",
										"data",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Electricity",
					"item": [
						{
							"name": "Electric",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    var jsonData = pm.response.json();\r",
											"  }); \r",
											"\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"OK\")\r",
											"});\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"status_code\", function () {\r",
											"   pm.expect(jsonData.status_code).to.eql(\"00\");\r",
											"});\r",
											"\r",
											"var resp = pm.response.json();\r",
											"\r",
											"pm.test(\"Electric\", function () {\r",
											"    pm.expect(resp.provider_reference).is.not.null\r",
											"    pm.expect(resp.account_name).is.not.null\r",
											"    pm.expect(resp.account_address).is.not.null\r",
											"    pm.expect(resp.account_id).is.not.null\r",
											"\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{bearer_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/billspay/electricity/?category=Electricity Prepaid&service=Ikeja Electric&action=account_lookup&account_number=1234",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billspay",
										"electricity",
										""
									],
									"query": [
										{
											"key": "category",
											"value": "Electricity Prepaid"
										},
										{
											"key": "service",
											"value": "Ikeja Electric"
										},
										{
											"key": "action",
											"value": "account_lookup"
										},
										{
											"key": "account_number",
											"value": "1234"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Electric Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();\r",
											"pm.test(\"Provider Reference\", function () {\r",
											"    pm.collectionVariables.set(\"providerReference\", jsonData.provider_reference);    \r",
											"});\r",
											"pm.test(\"Account name\", function () {\r",
											"    pm.collectionVariables.set(\"accountName\", jsonData.account_name);    \r",
											"});\r",
											"pm.test(\"Account address\", function () {\r",
											"    pm.collectionVariables.set(\"accountAddress\", jsonData.account_address);    \r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"  }); \r",
											"\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"OK\")\r",
											"});\r",
											"\r",
											"pm.test(\"status_code\", function () {\r",
											"   pm.expect(jsonData.status_code).to.eql(\"00\");\r",
											"});\r",
											"\r",
											"pm.test(\"Electric\", function () {\r",
											"    pm.expect(jsonData.provider_reference).is.not.null\r",
											"    pm.expect(jsonData.account_name).is.not.null\r",
											"    pm.expect(jsonData.account_address).is.not.null\r",
											"    pm.expect(jsonData.account_id).is.not.null\r",
											"\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{bearer_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/billspay/electricity/?category=Electricity Prepaid&service=Eko Electric&action=account_lookup&account_number=45046799958",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billspay",
										"electricity",
										""
									],
									"query": [
										{
											"key": "category",
											"value": "Electricity Prepaid"
										},
										{
											"key": "service",
											"value": "Eko Electric"
										},
										{
											"key": "action",
											"value": "account_lookup"
										},
										{
											"key": "account_number",
											"value": "45046799958"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Electricity Purchase  (empty customer name)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var resp = JSON.parse(responseBody);\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Empty customer name  error message returned\", function () {\r",
											"   pm.expect(resp.message.customer_name[0]).to.eql(\"Inputed customer_name cannot be empty\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{bearer_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n       \"customer_address\": \"{{accountAddress}}\",\n        \"customer_name\":\"\",\n        \"transaction_reference\":\"{{providerReference}}\",\n        \"account_number\": \"45046799958\",\n        \"category\": \"Electricity Prepaid\",\n        \"service\": \"Eko Electric\",\n        \"amount\": \"200\",\n        \"password\": \"Test419$\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/billspay/electricity/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billspay",
										"electricity",
										""
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Electricity Purchase (Empty Customer address)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var resp = JSON.parse(responseBody);\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Empty customer address  error message returned\", function () {\r",
											"   pm.expect(resp.message.customer_address[0]).to.eql(\"Inputed customer_address cannot be empty\")\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{bearer_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n       \"customer_address\": \"\",\n        \"customer_name\":\"{{accountName}}\",\n        \"transaction_reference\":\"{{providerReference}}\",\n        \"account_number\": \"45046799958\",\n        \"category\": \"Electricity Prepaid\",\n        \"service\": \"Eko Electric\",\n        \"amount\": \"200\",\n        \"password\": \"Test419$\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/billspay/electricity/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billspay",
										"electricity",
										""
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Electricity Purchase (Empty transaction reference)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var resp = JSON.parse(responseBody);\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Empty transaction reference  error message returned\", function () {\r",
											"   pm.expect(resp.message.transaction_reference[0]).to.eql(\"Inputed transaction_reference cannot be empty\")\r",
											"})\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{bearer_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n       \"customer_address\": \"{{accountAddress}}\",\n        \"customer_name\":\"{{accountName}}\",\n        \"transaction_reference\":\"\",\n        \"account_number\": \"45046799958\",\n        \"category\": \"Electricity Prepaid\",\n        \"service\": \"Eko Electric\",\n        \"amount\": \"200\",\n        \"password\": \"Test419$\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/billspay/electricity/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billspay",
										"electricity",
										""
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Electricity Purchase (Empty account number)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var resp = JSON.parse(responseBody);\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Empty customer name  error message returned\", function () {\r",
											"   pm.expect(resp.message.account_number[0]).to.eql(\"Inputed account_number cannot be empty\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{bearer_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n       \"customer_address\": \"{{accountAddress}}\",\n        \"customer_name\":\"{{accountName}}\",\n        \"transaction_reference\":\"{{providerReference}}\",\n        \"account_number\": \"\",\n        \"category\": \"Electricity Prepaid\",\n        \"service\": \"Eko Electric\",\n        \"amount\": \"200\",\n        \"password\": \"Test419$\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/billspay/electricity/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billspay",
										"electricity",
										""
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Electricity Purchase (Empty category)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var resp = JSON.parse(responseBody);\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Empty category  error message returned\", function () {\r",
											"   pm.expect(resp.message.category[0]).to.eql(\"Inputed category cannot be empty\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{bearer_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n       \"customer_address\": \"{{accountAddress}}\",\n        \"customer_name\":\"{{accountName}}\",\n        \"transaction_reference\":\"{{providerReference}}\",\n        \"account_number\": \"45046799958\",\n        \"category\": \"\",\n        \"service\": \"Eko Electric\",\n        \"amount\": \"200\",\n        \"password\": \"Test419$\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/billspay/electricity/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billspay",
										"electricity",
										""
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Electricity Purchase (Empty Service)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var resp = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Empty service  error message returned\", function () {\r",
											"   pm.expect(resp.message.service[0]).to.eql(\"Inputed service cannot be empty\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{bearer_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n       \"customer_address\": \"{{accountAddress}}\",\n        \"customer_name\":\"{{accountName}}\",\n        \"transaction_reference\":\"{{providerReference}}\",\n        \"account_number\": \"45046799958\",\n        \"category\": \"Electricity Prepaid\",\n        \"service\": \"\",\n        \"amount\": \"200\",\n        \"password\": \"Test419$\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/billspay/electricity/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billspay",
										"electricity",
										""
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Electricity Purchase (Empty amount)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var resp = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Empty customer name  error message returned\", function () {\r",
											"   pm.expect(resp.message.amount[0]).to.eql(\"Inputed amount cannot be empty\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{bearer_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n       \"customer_address\": \"{{accountAddress}}\",\n        \"customer_name\":\"{{accountName}}\",\n        \"transaction_reference\":\"{{providerReference}}\",\n        \"account_number\": \"45046799958\",\n        \"category\": \"Electricity Prepaid\",\n        \"service\": \"Eko Electric\",\n        \"amount\": \"\",\n        \"password\": \"Test419$\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/billspay/electricity/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billspay",
										"electricity",
										""
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Electricity Purchase",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var resp = JSON.parse(responseBody);\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"OK\");\r",
											"});\r",
											"pm.test(\"Success message is returned\", function () {\r",
											"   pm.expect(resp.response_message).to.eql(\"Successful\")\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{bearer_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n       \"customer_address\": \"{{accountAddress}}\",\n        \"customer_name\":\"{{accountName}}\",\n        \"transaction_reference\":\"{{providerReference}}\",\n        \"account_number\": \"45046799958\",\n        \"category\": \"Electricity Prepaid\",\n        \"service\": \"Eko Electric\",\n        \"amount\": \"1000\",\n        \"password\": \"Test419$\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/billspay/electricity/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billspay",
										"electricity",
										""
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Check Billspay Request",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200)\r",
											"    var jsonData = pm.response.json();\r",
											"  \r",
											"});\r",
											"pm.test(\"Status code name has string\", function () {\r",
											"    pm.response.to.have.status(\"OK\")\r",
											"});\r",
											"\r",
											"pm.test(\"id\", function () {\r",
											"    pm.expect(pm.response.text()).to.include(\"2f1cd517-b6fa-4dcf-8464-b7119a508563\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "JWT {{bearer_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/billspay/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"billspay",
										""
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "bearer_token",
			"value": ""
		},
		{
			"key": "mtn_id",
			"value": ""
		},
		{
			"key": "airtel_id",
			"value": ""
		},
		{
			"key": "globacom_id",
			"value": ""
		},
		{
			"key": "providerReference",
			"value": ""
		},
		{
			"key": "float_id",
			"value": ""
		},
		{
			"key": "Requestee",
			"value": ""
		},
		{
			"key": "vault_id",
			"value": ""
		},
		{
			"key": "Auth_token",
			"value": ""
		},
		{
			"key": "float_id_sub",
			"value": ""
		},
		{
			"key": "vault_id_sub",
			"value": ""
		},
		{
			"key": "accountName",
			"value": ""
		},
		{
			"key": "accountAddress",
			"value": ""
		},
		{
			"key": "9mobile_id",
			"value": ""
		}
	]
}